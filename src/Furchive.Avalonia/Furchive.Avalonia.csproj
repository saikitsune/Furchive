<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <AssemblyName>Furchive</AssemblyName>
    <AvaloniaUseCompiledBindingsByDefault>false</AvaloniaUseCompiledBindingsByDefault>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <FileVersion>1.1.0.0</FileVersion>
    <ApplicationIcon>..\..\assets\icon.ico</ApplicationIcon>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <!-- Toggle to include Avalonia.WebView packages when NuGet access is available -->
  <EnableAvaloniaWebView>false</EnableAvaloniaWebView>
    <!-- Make official Avalonia.WebView optional; default off to avoid restore issues in restricted environments -->
  <EnableOfficialAvaloniaWebView>false</EnableOfficialAvaloniaWebView>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia" Version="11.0.10" />
    <PackageReference Include="Avalonia.Desktop" Version="11.0.10" />
    <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.10" />
    <PackageReference Include="Avalonia.Controls.DataGrid" Version="11.0.10" />
    <PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <!-- Media playback and animated GIF support -->
  <PropertyGroup>
    <EnableLibVLC>true</EnableLibVLC>
    <EnableAnimatedImage>true</EnableAnimatedImage>
  </PropertyGroup>

  <ItemGroup Condition="'$(EnableLibVLC)'=='true'">
    <PackageReference Include="LibVLCSharp" Version="3.8.2" />
    <PackageReference Include="LibVLCSharp.Avalonia" Version="3.8.2" />
    <!-- Windows native VLC runtime; add Linux/macOS packages as needed for those RIDs -->
    <PackageReference Include="VideoLAN.LibVLC.Windows" Version="3.0.20" />
    <PackageReference Include="VideoLAN.LibVLC.Mac" Version="3.1.3.1" />
  </ItemGroup>

  <!-- Copy LibVLC native binaries and plugins into output/publish on Windows -->
  <PropertyGroup>
    <VideoLANLibVlcWindowsVersion>3.0.20</VideoLANLibVlcWindowsVersion>
  </PropertyGroup>

  <ItemGroup Condition="'$(EnableLibVLC)'=='true' and '$(OS)'=='Windows_NT'">
    <Content Include="$(NuGetPackageRoot)videolan.libvlc.windows\$(VideoLANLibVlcWindowsVersion)\content\libvlc\**\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <Link>libvlc\%(RecursiveDir)%(Filename)%(Extension)</Link>
    </Content>
  </ItemGroup>

  <ItemGroup Condition="'$(EnableAnimatedImage)'=='true'">
    <PackageReference Include="AnimatedImage.Avalonia" Version="2.0.0" />
  </ItemGroup>

  <!-- Conditionally include WebView packages to avoid restore failures when NuGet access is blocked -->
  <ItemGroup Condition="'$(EnableAvaloniaWebView)'=='true'">
    <PackageReference Include="WebView.Avalonia" Version="11.0.0.1" />
    <PackageReference Include="WebView.Avalonia.Desktop" Version="11.0.0.1" />
  </ItemGroup>

  <PropertyGroup Condition="'$(EnableAvaloniaWebView)'=='true'">
    <DefineConstants>$(DefineConstants);HAS_WEBVIEW_AVALONIA</DefineConstants>
  </PropertyGroup>

  <!-- Optionally include official Avalonia.WebView packages as well -->
  <ItemGroup Condition="'$(EnableOfficialAvaloniaWebView)'=='true'">
    <PackageReference Include="Avalonia.WebView" Version="11.0.5" />
    <PackageReference Include="Avalonia.WebView.Desktop" Version="11.0.5" />
  <PackageReference Include="Avalonia.WebView.Windows" Version="11.0.5" Condition="'$(OS)'=='Windows_NT'" />
  </ItemGroup>

  <PropertyGroup Condition="'$(EnableOfficialAvaloniaWebView)'=='true'">
    <DefineConstants>$(DefineConstants);HAS_OFFICIAL_AVALONIA_WEBVIEW</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\Furchive.Core\Furchive.Core.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <!-- Make shared app icon available as an Avalonia resource -->
    <AvaloniaResource Include="..\..\assets\icon.ico" Link="Assets\icon.ico" />
  </ItemGroup>
</Project>
