<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:Furchive.Avalonia.ViewModels"
    xmlns:cvt="using:Furchive.Avalonia.Converters"
    xmlns:beh="using:Furchive.Avalonia.Behaviors"
    x:Class="Furchive.Avalonia.Views.MainWindow"
    Width="1200" Height="800"
    WindowState="Maximized"
    Title="Furchive"
    Icon="avares://Furchive/Assets/icon.ico"
    mc:Ignorable="d">
    <Window.Resources>
        <cvt:DownloadEtaConverter x:Key="DownloadEta"/>
        <cvt:DownloadStatusToBoolConverter x:Key="StatusIsDownloading" Target="Downloading"/>
        <cvt:DownloadStatusToBoolConverter x:Key="StatusIsPaused" Target="Paused"/>
        <cvt:DownloadStatusToBoolConverter x:Key="StatusIsActive" Targets="Downloading,Queued"/>
        <cvt:DownloadStatusToBoolConverter x:Key="StatusIsFailed" Target="Failed"/>
    </Window.Resources>
    <Design.DataContext>
        <vm:MainViewModel />
    </Design.DataContext>
    <Grid x:Name="RootGrid" RowDefinitions="Auto,*,Auto,*" ColumnDefinitions="*">
        <!-- Top header: use DockPanel to keep right actions anchored and avoid overlap -->
        <DockPanel Margin="8" LastChildFill="True">
            <StackPanel Orientation="Horizontal" Spacing="8" DockPanel.Dock="Right" HorizontalAlignment="Right">
                <Button Content="Open Downloads Folder" Command="{Binding OpenDownloadsFolderCommand}"/>
                <Button Content="Settings" Click="OnOpenSettings"/>
            </StackPanel>
            <!-- WrapPanel to prevent overlap on narrow widths/DPI -->
            <WrapPanel>
                <TextBox Width="420" Watermark="Search tags" Text="{Binding SearchQuery, Mode=TwoWay}"/>
                <ComboBox Width="160" SelectedIndex="{Binding RatingFilterIndex, Mode=TwoWay}">
                    <ComboBoxItem Content="All"/>
                    <ComboBoxItem Content="Explicit"/>
                    <ComboBoxItem Content="Questionable"/>
                    <ComboBoxItem Content="Safe"/>
                </ComboBox>
                <Button Content="Search" Command="{Binding SearchCommand}" IsEnabled="{Binding IsSearching, Converter={StaticResource InverseBoolean}}"/>
                <Button Content="Favorites" Command="{Binding FavoritesCommand}" IsVisible="{Binding ShowFavoritesButton}"/>
                <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="{Binding StatusMessage}" IsVisible="{Binding IsSearching, Converter={StaticResource InverseBoolean}}"/>
            </WrapPanel>

            <!-- Top status/progress panel docked at bottom of header -->
            <Border DockPanel.Dock="Bottom" Margin="0,6,0,0">
                <StackPanel Spacing="4">
                    <!-- Global search indicator -->
                    <StackPanel Orientation="Horizontal" Spacing="8" IsVisible="{Binding IsSearching}">
                        <TextBlock Text="Searchingâ€¦"/>
                        <ProgressBar Width="160" Height="10" IsIndeterminate="True"/>
                    </StackPanel>
                    <!-- Background prefetch indicator -->
                    <StackPanel Orientation="Horizontal" Spacing="8" IsVisible="{Binding IsBackgroundCaching}">
                        <TextBlock>
                            <Run Text="Prefetching:"/>
                            <Run Text=" "/>
                            <Run Text="{Binding BackgroundCachingCurrent}"/>
                            <Run Text="/"/>
                            <Run Text="{Binding BackgroundCachingTotal}"/>
                            <Run Text=" pages â€¢ "/>
                            <Run Text="{Binding BackgroundCachingItemsFetched}"/>
                            <Run Text=" items"/>
                        </TextBlock>
                        <ProgressBar Width="200" Height="10" Minimum="0" Maximum="{Binding BackgroundCachingTotal}" Value="{Binding BackgroundCachingCurrent}"/>
                    </StackPanel>
                    <!-- Pools cache refresh indicator -->
                    <StackPanel Orientation="Horizontal" Spacing="8" IsVisible="{Binding IsPoolsLoading}">
                        <TextBlock Text="Pools:"/>
                        <TextBlock Text="{Binding PoolsStatusText}"/>
                        <ProgressBar Width="200" Height="10"
                                     Minimum="0" Maximum="{Binding PoolsProgressTotal}"
                                     IsIndeterminate="{Binding PoolsProgressHasTotal, Converter={StaticResource InverseBoolean}}"
                                     Value="{Binding PoolsProgressCurrent}"/>
                        <Button Content="Cancel" Command="{Binding CancelPoolsUpdateCommand}"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </DockPanel>

    <Grid x:Name="MainColumnsGrid" Grid.Row="1" Margin="8,0,8,0">
            <Grid.ColumnDefinitions>
        <ColumnDefinition Width="260"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="360"/>
            </Grid.ColumnDefinitions>
            <StackPanel>
                <StackPanel Orientation="Horizontal" Spacing="6">
                    <TextBlock Text="Pools" FontWeight="Bold"/>
                    <TextBlock Text="{Binding PoolsStatusText}"/>
                    <ProgressBar Width="100" Height="10" Minimum="0" Maximum="100" IsVisible="{Binding IsPoolsLoading}" Value="{Binding PoolsProgressCurrent}"/>
                    <Button Content="Cancel" Command="{Binding CancelPoolsUpdateCommand}" IsVisible="{Binding IsPoolsLoading}"/>
                </StackPanel>
                <TextBox Watermark="Filter pools" Text="{Binding PoolSearch, Mode=TwoWay}"/>
        <!-- Limit to ~5 items tall with scroll; template clamps name within column -->
    <ListBox ItemsSource="{Binding FilteredPools}" SelectedItem="{Binding SelectedPool}" SelectionChanged="OnPoolsSelectionChanged"
            MaxHeight="170"
            ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid ColumnDefinitions="*,Auto" Margin="0,0,0,2">
                                <TextBlock Grid.Column="0" Text="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Grid.Column="1" Text="{Binding PostCount}" Margin="6,0,0,0"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <StackPanel Orientation="Horizontal" Spacing="6">
                    <Button Content="ðŸ“Œ Pin" Command="{Binding PinSelectedPoolCommand}" IsVisible="{Binding ShowPinPoolButton}"/>
                </StackPanel>

                <!-- Include Tags -->
                <TextBlock Text="Include Tags" FontWeight="Bold" Margin="0,10,0,0"/>
                <StackPanel Orientation="Horizontal" Spacing="6">
                    <TextBox x:Name="includeTagInput" Width="160" Watermark="tag" KeyDown="OnIncludeTagKeyDown"/>
                    <Button Content="Add" Command="{Binding AddIncludeTagCommand}" CommandParameter="{Binding Text, ElementName=includeTagInput}"/>
                </StackPanel>
                <ItemsControl ItemsSource="{Binding IncludeTags}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Spacing="6">
                                <Button Content="{Binding .}" Command="{Binding DataContext.RemoveIncludeTagCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!-- Exclude Tags -->
                <TextBlock Text="Exclude Tags" FontWeight="Bold" Margin="0,10,0,0"/>
                <StackPanel Orientation="Horizontal" Spacing="6">
                    <TextBox x:Name="excludeTagInput" Width="160" Watermark="-tag" KeyDown="OnExcludeTagKeyDown"/>
                    <Button Content="Add" Command="{Binding AddExcludeTagCommand}" CommandParameter="{Binding Text, ElementName=excludeTagInput}"/>
                </StackPanel>
                <ItemsControl ItemsSource="{Binding ExcludeTags}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Spacing="6">
                                <Button Content="{Binding .}" Command="{Binding DataContext.RemoveExcludeTagCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!-- Saved Searches -->
                <TextBlock Text="Saved Searches" FontWeight="Bold" Margin="0,10,0,0"/>
                <StackPanel Orientation="Horizontal" Spacing="6">
                    <TextBox x:Name="saveSearchInput" Width="160" Text="{Binding SaveSearchName, Mode=TwoWay}" Watermark="Name" KeyDown="OnSaveSearchKeyDown"/>
                    <Button Content="Save" Command="{Binding SaveSearchCommand}"/>
                </StackPanel>
                <ItemsControl ItemsSource="{Binding SavedSearches}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Spacing="6">
                                <TextBlock Text="{Binding Name}" Width="140"/>
                                <Button Content="Search" Command="{Binding DataContext.ApplySavedSearchCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}" />
                                <Button Content="Delete" Command="{Binding DataContext.DeleteSavedSearchCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}"/>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <!-- Pinned Pools -->
                <TextBlock Text="Pinned Pools" FontWeight="Bold" Margin="0,10,0,0"/>
                <ListBox x:Name="PinnedPoolsList" ItemsSource="{Binding PinnedPools}" SelectionChanged="OnPinnedPoolsSelectionChanged"
                         MaxHeight="170"
                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid ColumnDefinitions="*,Auto,Auto" Margin="0,0,0,2">
                                <TextBlock Grid.Column="0" Text="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Grid.Column="1" Text="{Binding PostCount}" Margin="6,0,0,0"/>
                                <Button Grid.Column="2" Content="Ã—" Padding="6,0" Margin="6,0,0,0"
                                        Command="{Binding DataContext.UnpinPoolCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding .}"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>

            <Grid Grid.Column="1" RowDefinitions="Auto,*">
                <StackPanel Orientation="Horizontal" Spacing="8" HorizontalAlignment="Center">
                    <Button Content="Prev" Command="{Binding PrevPageCommand}" IsEnabled="{Binding CanGoPrev}"/>
                    <TextBlock VerticalAlignment="Center" Text="{Binding PageInfo}"/>
                    <Button Content="Next" Command="{Binding NextPageCommand}" IsEnabled="{Binding CanGoNext}"/>
                </StackPanel>
                <ScrollViewer Grid.Row="1">
                    <ListBox x:Name="GalleryList" ItemsSource="{Binding SearchResults}" SelectedItem="{Binding SelectedMedia}" KeyDown="OnGalleryKeyDown" PointerPressed="OnGalleryPointerPressed">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <!-- Double-tap handler can be wired in code-behind if needed. -->
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="6" Width="{Binding DataContext.GalleryTileWidth, RelativeSource={RelativeSource AncestorType=Window}}" Height="{Binding DataContext.GalleryTileHeight, RelativeSource={RelativeSource AncestorType=Window}}">
                                    <Grid RowDefinitions="Auto,Auto">
                                        <Image Stretch="UniformToFill"
                             Width="{Binding DataContext.GalleryImageSize, RelativeSource={RelativeSource AncestorType=Window}}"
                             Height="{Binding DataContext.GalleryImageSize, RelativeSource={RelativeSource AncestorType=Window}}"
                             beh:RemoteImage.SourceUri="{Binding PreviewUrl}" />
                                        <TextBlock FontSize="20" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" IsVisible="{Binding FileExtension, Converter={StaticResource FileTypeIsPlayable}}">â–¶</TextBlock>
                                        <StackPanel Grid.Row="1" Margin="2,4,2,0" Spacing="2">
                                            <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                                            <StackPanel Orientation="Horizontal" Spacing="6">
                                                <TextBlock Text="{Binding Artist}" Foreground="Gray"/>
                                                <TextBlock>Â·</TextBlock>
                                                <TextBlock Text="{Binding FileExtension, Converter={StaticResource Uppercase}}"/>
                                            </StackPanel>
                                            <!-- ID and downloaded checkmark -->
                                            <StackPanel Orientation="Horizontal" Spacing="6">
                                                <TextBlock Text="ID:" Foreground="Gray"/>
                                                <TextBlock Text="{Binding Id}"/>
                                                <TextBlock Text="âœ”" Foreground="Lime" FontWeight="Bold" IsVisible="{Binding ., Converter={StaticResource IsMediaDownloaded}}"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>
            </Grid>

            <!-- Splitter between left and center (invisible, still draggable) -->
            <GridSplitter Grid.Column="0" HorizontalAlignment="Right" Width="2" Background="Transparent" ResizeDirection="Columns" DragCompleted="OnColumnSplitterDragCompleted"/>
            <!-- Splitter between center and right (invisible, still draggable) -->
            <GridSplitter Grid.Column="1" HorizontalAlignment="Right" Width="2" Background="Transparent" ResizeDirection="Columns" DragCompleted="OnColumnSplitterDragCompleted"/>

            <!-- Preview Pane -->
            <Border Grid.Column="2" Padding="8" IsVisible="{Binding SelectedMedia, Converter={StaticResource NullToBoolVisible}}">
                <ScrollViewer DataContext="{Binding SelectedMedia}">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <Button Content="Open Browser" Command="{Binding DataContext.OpenSelectedInBrowserCommand, RelativeSource={RelativeSource AncestorType=Window}}" IsEnabled="{Binding DataContext.CanOpenSelectedInBrowser, RelativeSource={RelativeSource AncestorType=Window}}"/>
                            <Button Content="Open Viewer" Command="{Binding DataContext.OpenViewerCommand, RelativeSource={RelativeSource AncestorType=Window}}" IsEnabled="{Binding DataContext.CanOpenViewer, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </StackPanel>
                        <Image Stretch="Uniform" MaxHeight="300" beh:RemoteImage.SourceUri="{Binding PreviewUrl}" Cursor="Hand" PointerReleased="OnPreviewImagePointerReleased"/>
                        <!-- Basic metadata -->
                        <TextBlock Text="{Binding Title}" FontWeight="SemiBold"/>
                        <TextBlock Text="{Binding Artist}"/>
                        <TextBlock Text="{Binding Source}"/>

                        <!-- Pool info if available -->
                        <StackPanel Orientation="Horizontal" Spacing="6" IsVisible="{Binding DataContext.PreviewPoolVisible, RelativeSource={RelativeSource AncestorType=Window}}">
                            <TextBlock Text="Pool:" FontWeight="SemiBold"/>
                            <TextBlock Text="{Binding DataContext.PreviewPoolDisplayName, RelativeSource={RelativeSource AncestorType=Window}}"/>
                        </StackPanel>

                        <!-- Description -->
                        <TextBlock Text="Description" FontWeight="SemiBold" Margin="0,8,0,0"/>
                        <TextBlock Text="{Binding Description}" TextWrapping="Wrap" MaxHeight="200"/>

                        <!-- Categorized tag chips -->
                        <TextBlock Text="Tags" FontWeight="SemiBold" Margin="0,8,0,4"/>
                        <ItemsControl ItemsSource="{Binding TagCategories}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Margin="0,4,0,8">
                                        <TextBlock Text="{Binding Key}" FontWeight="SemiBold"/>
                                        <ItemsControl ItemsSource="{Binding Value}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                            <Border CornerRadius="12"
                                Background="#333"
                                Padding="6,2"
                                Margin="0,4,4,0"
                                Cursor="Hand"
                                ToolTip.Tip="Left-click: include tag; Right-click: exclude tag">
                                                        <TextBlock Text="{Binding .}"/>
                                                    </Border>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </Border>
        </Grid>
    <!-- Horizontal splitter above Downloads (invisible, still draggable) -->
    <GridSplitter Grid.Row="2" Height="2" HorizontalAlignment="Stretch" Background="Transparent" ResizeDirection="Rows" DragCompleted="OnRowSplitterDragCompleted"/>

    <!-- Downloads -->
    <Border x:Name="DownloadsPanel" Grid.Row="3" Margin="8,8,8,8" Padding="6" BorderBrush="#333" BorderThickness="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <TextBlock Text="Downloads" FontWeight="Bold"/>
                    <Button Content="Download Selected" Command="{Binding DownloadSelectedCommand}" IsEnabled="{Binding SelectedMedia, Converter={StaticResource NullToBoolVisible}}"/>
                    <Button Content="{Binding DownloadAllLabel}" Command="{Binding DownloadAllCommand}"/>
                </StackPanel>
                <DataGrid Grid.Row="1" ItemsSource="{Binding DownloadQueue}" AutoGenerateColumns="False" HeadersVisibility="Column">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Title" Binding="{Binding MediaItem.Title}" Width="2*"/>
                        <DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="*"/>
                        <DataGridTemplateColumn Header="Progress" Width="*">
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Spacing="6">
                                    <ProgressBar Width="120" Height="14" Minimum="0" Maximum="100" Value="{Binding ProgressPercent}"/>
                                    <TextBlock Text="{Binding . , Converter={StaticResource DownloadEta}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Actions" Width="240">
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" Spacing="6">
                                    <Button Content="Open" IsEnabled="False"/>
                                    <Button Content="Folder" IsEnabled="False"/>
                                    <Button Content="Pause" Command="{Binding DataContext.PauseDownloadCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}" IsVisible="{Binding Status, Converter={StaticResource StatusIsDownloading}}"/>
                                    <Button Content="Resume" Command="{Binding DataContext.ResumeDownloadCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}" IsVisible="{Binding Status, Converter={StaticResource StatusIsPaused}}"/>
                                    <Button Content="Cancel" Command="{Binding DataContext.CancelDownloadCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}" IsVisible="{Binding Status, Converter={StaticResource StatusIsActive}}"/>
                                    <Button Content="Retry" Command="{Binding DataContext.RetryDownloadCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding .}" IsVisible="{Binding Status, Converter={StaticResource StatusIsFailed}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Path" Binding="{Binding DestinationPath}" Width="2*"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Border>
    </Grid>
</Window>
