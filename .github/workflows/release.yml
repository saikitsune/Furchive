name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    env:
      DOTNET_VERSION: '8.0.x'
      RUNTIME: 'win-x64'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install Inno Setup
        shell: pwsh
        run: |
          $ProgressPreference = 'SilentlyContinue'
          $url = 'https://jrsoftware.org/download.php/is.exe'
          $installer = "$env:RUNNER_TEMP\inno-setup.exe"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process -FilePath $installer -ArgumentList "/VERYSILENT /NORESTART /ALLUSERS" -Wait
          $iscc = 'C:\Program Files (x86)\Inno Setup 6\ISCC.exe'
          if (-not (Test-Path $iscc)) { $iscc = 'C:\Program Files\Inno Setup 6\ISCC.exe' }
          if (-not (Test-Path $iscc)) { throw 'ISCC.exe not found after install' }
          echo "INNOSETUP=$iscc" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Build and publish app
        shell: pwsh
        run: |
          dotnet restore
          dotnet build .\src\Furchive\Furchive.csproj -c Release

      - name: Download WebView2 runtime (to be bundled)
        id: dlwv2
        shell: pwsh
        run: |
          $wv2Url = 'https://go.microsoft.com/fwlink/p/?LinkId=2124701'
          $out = "${{ github.workspace }}\installer\inno\MicrosoftEdgeWebView2RuntimeInstallerX64.exe"
          if (-not (Test-Path $out)) {
            Invoke-WebRequest -Uri $wv2Url -OutFile $out
          }

      - name: Build installer
        shell: pwsh
        run: |
          $version = (${env:GITHUB_REF_NAME} -replace '^v','')
          powershell -ExecutionPolicy Bypass -File .\installer\build-installer.ps1 -Configuration Release -Runtime $env:RUNTIME -Version $version

      - name: Upload artifact (installer)
        uses: actions/upload-artifact@v4
        with:
          name: FurchiveSetup
          path: installer/inno/output/FurchiveSetup.exe

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Furchive ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            installer/inno/output/FurchiveSetup.exe
            installer/inno/MicrosoftEdgeWebView2RuntimeInstallerX64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
